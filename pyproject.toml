[project]
name = "filterpath"
dynamic = ["version"]
description = "Recursively gets and filters dict/list-like objects with a path-like syntax"
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Gordon Code", email = "will@gordoncode.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Typing :: Typed"
]
dependencies = [
    "loguru>=0.7.3",
]

[project.urls]
repository = "https://github.com/gordon-code/filterpath"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.version]
source = "scm"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.4",
    "ruff>=0.9.4",
]

[tool.ruff]
line-length = 120
src = ["src"]
force-exclude = true
# Match pylint version checking
target-version = "py311"

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [ "ALL" ]
ignore = [
    # Specific ignores
    "ISC001",   # Conflicts with `ruff` formatter
    "ANN401",   # Allow typing.Any
    # Undocumented code
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    # Broad ignores
    "CPY", "PD", "NPY", "FBT", "TD", "FIX", "AIR", "ERA", "F401", "F821"
]
# Don't automatically remove `print`
# Stop automatically removing unused imports
# Stop automatically removing unused variables
unfixable = ["T201", "F401", "F841"]

[tool.ruff.lint.per-file-ignores]
# Ignore `assert` in test files (S101), magic values (PLR2004), and private member accessed (SLF001)
"*_test.py" = ["S101", "PLR2004", "SLF001", "ANN"]

[tool.ruff.lint.isort]
known-first-party = ["filterpath"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
minversion = "8.1"
cache_dir = ".cache/pytest"
python_files = "*_test.py"
